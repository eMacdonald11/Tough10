<!DOCTYPE html>
<html>
<head>
  <title>Analytics</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link href="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: 'Open Sans', sans-serif;
      text-align: center;
      background: #ECE7D8;
      color: #333;
      margin: 0;
      padding: 2rem;
      box-sizing: border-box;
      overflow-x: hidden;
    }
    .container {
      background: #F9F8F3;
      max-width: 650px;
      margin: 0 auto;
      padding: 2rem;
      border-radius: 10px;
      border: 1px solid #DDD;
      box-sizing: border-box;
    }

    h1 {
      color: #556B2F;
      margin-bottom: 1.25rem;
      font-size: 1.5rem;
    }
    .button-form {
      margin: 1rem 0;
      text-align: center;
    }
    .button-form button {
      display: block;
      width: 100%;
      margin: 0 auto;
      padding: 0.75rem 1.25rem;
      font-size: 1rem;
      font-weight: 700;
      background: #A0522D;
      color: #fff;
      border: 2px solid #8C4528;
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.3s ease;
      box-sizing: border-box;
    }
    .button-form button:hover {
      background: #8C4528;
    }

    select {
      margin: 0.625rem;
      padding: 0.625rem 0.938rem;
      font-size: 1rem;
      border-radius: 5px;
      width: 100%;
      max-width: 100%;
      box-sizing: border-box;
    }
    #chart-container {
      width: 100%;
      max-width: 100%;
      margin: 1.25rem auto;
      box-sizing: border-box;
    }
    .exercise-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.3125rem;
      margin-top: 0.625rem;
    }
    .olive-button {
      background-color: #556B2F;
      color: white;
      padding: 0.75rem 0.938rem;
      font-size: 1.0625rem;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.3s ease;
      box-sizing: border-box;
      width: 100%;
      max-width: 150px;
    }
    .olive-button:hover {
      background-color: #3B4F1A;
    }

    @media (min-width: 601px) {
      body {
        padding: 2rem;
      }
      .exercise-container {
        flex-direction: row;
      }
      .olive-button {
        max-width: 150px;
      }
    }
    @media (max-width: 600px) {
      body {
        padding: 1rem;
      }
      .exercise-container {
        flex-direction: column;
      }
      .olive-button {
        max-width: 100%;
      }
    }
  </style>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
  <div class="container">
    <h1>Analytics</h1>
    <p>Select an exercise to view your progress over time.</p>

    <div class="exercise-container">
      <select id="exercise-select">
        <% exercises.forEach(ex => { %>
          <option value="<%= ex.exercise_name %>"><%= ex.exercise_name %></option>
        <% }); %>
      </select>
      <button type="button" onclick="fetchAnalyticsData()" class="olive-button">View</button>
    </div>

    <div id="chart-container">
      <canvas id="progressChart"></canvas>
    </div>

    <form action="/generate-workout" method="GET" class="button-form">
      <button type="submit">Back to Home</button>
    </form>
  </div>

  <script>
    let chartInstance;
    async function fetchAnalyticsData() {
      const exercise_name = document.getElementById('exercise-select').value;
      const response = await fetch('/analytics/data', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ exercise_name })
      });
      const result = await response.json();
      if (result.error) {
        alert(result.error);
        return;
      }
      const { labels, dataAvgWeight, dataAvgReps, dataTotalLoad } = result;
      renderChart(labels, dataAvgWeight, dataAvgReps, dataTotalLoad);
    }

    function renderChart(labels, dataAvgWeight, dataAvgReps, dataTotalLoad) {
      const ctx = document.getElementById('progressChart').getContext('2d');
      if (chartInstance) {
        chartInstance.destroy();
      }
      chartInstance = new Chart(ctx, {
        type: 'line',
        data: {
          labels,
          datasets: [
            {
              label: 'Avg Weight (lbs)',
              data: dataAvgWeight,
              borderColor: 'rgba(160,82,45, 1)',
              backgroundColor: 'rgba(160,82,45, 0.2)',
              fill: true,
              tension: 0.1
            },
            {
              label: 'Avg Reps',
              data: dataAvgReps,
              borderColor: 'rgba(85,107,47,1)',
              backgroundColor: 'rgba(85,107,47,0.2)',
              fill: true,
              tension: 0.1
            },
            {
              label: 'Total Load (AvgWeight * AvgReps)',
              data: dataTotalLoad,
              borderColor: 'rgba(70,130,180,1)',
              backgroundColor: 'rgba(70,130,180,0.2)',
              fill: true,
              tension: 0.1
            }
          ]
        },
        options: {
          scales: {
            y: { beginAtZero: true }
          }
        }
      });
    }
  </script>
</body>
</html>